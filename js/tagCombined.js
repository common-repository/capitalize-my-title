function LexerNode(t,r,e){if(this.string=t,this.children=[],t){this.matches=t.match(r);var i=t.split(r)}if(!this.matches){this.matches=[];i=[t]}if(e.length>0){var n=e[0],s=e.slice(1);for(var h in i)this.children.push(new LexerNode(i[h],n,s))}else this.children=i}function Lexer(){this.regexs=[/[0-9]*\.[0-9]+|[0-9]+/gi,/[ \t\n\r]+/gi,/[\.\,\?\!]/gi]}function POSTagger(){this.lexicon=POSTAGGER_LEXICON,this.tagsMap=LEXICON_TAG_MAP}LexerNode.prototype.fillArray=function(t){for(var r in this.children){var e=this.children[r];if(e.fillArray?e.fillArray(t):/[^ \t\n\r]+/i.test(e)&&t.push(e),r<this.matches.length){var i=this.matches[r];/[^ \t\n\r]+/i.test(i)&&t.push(i)}}},LexerNode.prototype.toString=function(){var t=[];return this.fillArray(t),t.toString()},Lexer.prototype.lex=function(t){var r=[];return new LexerNode(t,this.regexs[0],this.regexs.slice(1)).fillArray(r),r},String.prototype.startsWithLex=function(t){return!!t&&0==this.indexOf(t)},String.prototype.endsWithLex=function(t){return!(!t||t.length>this.length)&&this.indexOf(t)==this.length-t.length},POSTagger.prototype.wordInLexicon=function(t){var r=this.lexicon[t];return null!=r||(r||(r=this.lexicon[t.toLowerCase()]),!!r)},POSTagger.prototype.tag=function(t){for(var r=new Array(t.length),e=0,i=t.length;e<i;e++){var n=this.lexicon[t[e]];n||(n=this.lexicon[t[e].toLowerCase()]),n||1!=t[e].length||(r[e]=t[e]+"^"),r[e]=n?this.tagsMap[n][0]:"NN"}for(e=0;e<t.length;e++)word=r[e],e>0&&"DT"==r[e-1]&&("VBD"!=word&&"VBP"!=word&&"VB"!=word||(r[e]="NN")),word.startsWithLex("N")&&(t[e].indexOf(".")>-1&&(r[e]="CD"),parseFloat(t[e])&&(r[e]="CD")),r[e].startsWithLex("N")&&t[e].endsWithLex("ed")&&(r[e]="VBN"),t[e].endsWithLex("ly")&&(r[e]="RB"),r[e].startsWithLex("NN")&&word.endsWithLex("al")&&(r[e]=e),e>0&&r[e].startsWithLex("NN")&&"would"==t[e-1].toLowerCase()&&(r[e]="VB"),"NN"==r[e]&&t[e].endsWithLex("s")&&(r[e]="NNS"),r[e].startsWithLex("NN")&&t[e].endsWithLex("ing")&&(r[e]="VBG");var s=new Array;for(e in t)s[e]=[t[e],r[e]];return s},POSTagger.prototype.prettyPrint=function(t){for(i in t)print(t[i][0]+"("+t[i][1]+")")};